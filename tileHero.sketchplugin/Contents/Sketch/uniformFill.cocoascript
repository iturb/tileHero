@import "tools.cocoascript"

var TITLE = "Tile Hero: Uniform fill"
var CANCEL_BUTTON_TITLE = "CANCEL"
var NEXT_BUTTON_TITLE = "CANCEL"
var LABEL_TEXT = "Pixel separation"
var FIELD_TEXT = "0"
var WINDOW_WIDTH = 300
var WINDOW_HEIGHT = 140
var CANCEL_BUTTON_WIDTH = 60
var CANCEL_BUTTON_HEIGHT = 30
var NEXT_BUTTON_X = 240
var NEXT_BUTTON_WIDTH = 60
var NEXT_BUTTON_HEIGHT = 30
var LABEL_X = 20
var LABEL_Y = 80
var FIELD_X = 80
var FIELD_Y = 80
var FIELD_WIDTH = 60
var FIELD_HEIGHT = 60

var onRun = function(context)
{
    var window = createWindow(WINDOW_WIDTH, WINDOW_HEIGHT, TITLE)
    var shouldContinue = false
    var cancelButton = createButton(0, 0, CANCEL_BUTTON_WIDTH, CANCEL_BUTTON_HEIGHT, CANCEL_BUTTON_TITLE, function(sender)
                                    {
                                        NSApp.stopModal()
                                        window.close()
                                    })
    
    var nextButton = createButton(NEXT_BUTTON_X, 0, NEXT_BUTTON_WIDTH, NEXT_BUTTON_HEIGHT, NEXT_BUTTON_TITLE, function(sender)
                                    {
                                        shouldContinue = true
                                        NSApp.stopModal()
                                        window.close()
                                    })
    
    var label = createLabel(LABEL_X, LABEL_Y, LABEL_TEXT)
    var field = createField(FIELD_X, FIELD_Y, FIELD_WIDTH, FIELD_HEIGHT, FIELD_TEXT)
    
    window.contentViewController().view().addSubview(cancelButton)
    window.contentViewController().view().addSubview(nextButton)
    window.contentViewController().view().addSubview(label)
    window.contentViewController().view().addSubview(field)
    
    NSApp.runModalForWindow(window)
    
    
    /*
    var artboards = []
    var sketch = context.api()
    var layers = sketch.selectedDocument.selectedLayers
    
    layers.iterate
    (
        function(item)
        {
            if (item.isArtboard)
            {
                artboards.push(item);
            }
        }
    )
    
    var countArtboards = artboards.length
    
    if (countArtboards < 1)
    {
        context.document.showMessage("Select at least 1 Artboard")
    }
    else
    {
        for (var indexArtboard = 0; indexArtboard < countArtboards; indexArtboard++)
        {
            var artboard = artboards[indexArtboard]
            makeTile(artboard)
        }
    }*/
};

function makeTile(artboard)
{
    var artboardFrame = artboard.frame
    var artboardWidth = artboardFrame.width
    var artboardHeight = artboardFrame.height
    var layers = []
    
    artboard.iterate
    (
        function(item)
        {
            layers.push(item)
        }
    )
    
    var countLayers = layers.length
    
    for (var indexLayer = 0; indexLayer < countLayers; indexLayer++)
    {
        var layer = layers[indexLayer]
        randomize(layer, artboardWidth, artboardHeight)
    }
}

function randomize(layer, artboardWidth, artboardHeight)
{
    var frame = layer.frame
    var width = frame.width
    var height = frame.height
    var minX = 1 - width
    var maxX = artboardWidth
    var minY = 1 - height
    var maxY = artboardHeight
    
    for (var posX = minX; posX < maxX; posX++)
    {
        for (var posY = minY; posY < maxY; posY++)
        {
            var newLayer = layer.duplicate()
            var newFrame = newLayer.sketchObject.frame()
            newFrame.setX(posX)
            newFrame.setY(posY)
            
            posY += height
        }
        
        posX += width
    }
    
    layer.remove()
}
